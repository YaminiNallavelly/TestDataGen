# TKINTER - GUI based apps

from tkinter import *

root = Tk()

label1 = Label(root, text="Hello Everyone")

label1.pack()
root.mainloop()


# Using Frames
from tkinter import *
root = Tk()

newframe = Frame(root)
newframe.pack()

secondframe = Frame(root)
secondframe.pack(side=BOTTOM)

button1 = Button(newframe,text="Click Here",fg = "Red")
button2 = Button(secondframe,text="Click Here",fg = "Blue")

button1.pack()
button2.pack()

root.mainloop()

# Grid layout
from tkinter import *
root = Tk()
label1 = Label(root,text = "First Name")
label2 = Label(root,text = "Last Name")

entry1 = Entry(root)
entry2 = Entry(root)

label1.grid(row=0,column = 0)
label2.grid(row=1,column = 0)
entry1.grid(row=0,column = 1)
entry2.grid(row=1,column = 1)

root.mainloop()

# Self Adjusting Widgets
from tkinter import *
root = Tk()

label1 = Label(root,text = "First Label",bg = "Red",fg = "White")
label1.pack(fill=X)

# specifying the side to align
label2 = Label(root,text = "Second Label",bg = "Blue",fg = "Green")
label2.pack(side=LEFT,fill=Y)
root.mainloop()

# Handling Button clicks
from tkinter import *
root = Tk()

def task1():
    print("You clicked the button")
button1 = Button(root, text="Click Here", command=task1)
button1.pack()
root.mainloop()

# Using classes
# here we will be using classes instead of writing the objects manually
# __init__ will automatically execute the entire code in the class
from tkinter import *
class mybuttons:
    def __init__(self, rootone):
        frame = Frame(rootone)
        frame.pack()

        self.printbutton = Button(frame, text="Click Here", command=self.printmessage)
        self.printbutton.pack()
        self.quitbutton = Button(frame, text="Exit", command=frame.quit)
        self.quitbutton.pack(side=LEFT)

    def printmessage(self):
        print("Button Clicked")

root=Tk()
b = mybuttons(root)
root.mainloop()

# Using Dropdowns

from tkinter import *
# in python we already have a class for menu so we use it instead of
# crating a class
def function1():
    print("Menu item clicked")
root = Tk()

mymenu = Menu(root)
root.config(menu=mymenu)

submenu = Menu(mymenu)
mymenu.add_cascade(label="File",menu=submenu)


submenu.add_command(label="Project",command=function1)
submenu.add_command(label="Save",command=function1)

submenu.add_separator()
submenu.add_command(label="Exit",command=function1)

newmenu = Menu(mymenu)
mymenu.add_cascade(label="Edit",menu=newmenu)
newmenu.add_command(label="Undo",command=function1)

root.mainloop()

# Toolbar
from tkinter import *
def function1():
    print("Menu item clicked")
root=Tk()
mymenu = Menu(root)
root.config(menu=mymenu)
submenu = Menu(mymenu)
mymenu.add_cascade(label="File",menu=submenu)
submenu.add_separator()
submenu.add_command(label="Exit",command=function1)
newmenu=Menu(mymenu)
mymenu.add_cascade(label="Edit",menu=newmenu)
newmenu.add_command(label="Undo",command=function1)

toolbar = Frame(root, bg="pink")
# adding buttons to the toolbar
insertbutton = Button(toolbar , text="Insert Files", command=function1)
insertbutton.pack(side=LEFT, padx=2, pady=3)
printbutton=Button(toolbar, text="Print", command=function1)
printbutton.pack(side=LEFT, padx=2, pady=3)

toolbar.pack(side=TOP, fill=X)
root.mainloop()







